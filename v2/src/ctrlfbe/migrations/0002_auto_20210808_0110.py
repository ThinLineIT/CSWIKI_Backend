# Generated by Django 3.2.5 on 2021-08-08 01:10

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("ctrlf_auth", "0003_auto_20210808_0110"),
        ("ctrlfbe", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentHistory",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("sub_id", models.IntegerField(help_text="type에 대한 id")),
                (
                    "type",
                    models.CharField(
                        choices=[("NOTE", "노트"), ("TOPIC", "토픽"), ("PAGE", "페이지")],
                        help_text="NOTE, TOPIC, PAGE",
                        max_length=30,
                    ),
                ),
                (
                    "action",
                    models.CharField(
                        choices=[("CREATE", "생성"), ("UPDATE", "수정"), ("DELETE", "삭제")], help_text="CRUD", max_length=30
                    ),
                ),
                ("reason", models.TextField(default="", help_text="수정 혹은 삭제 이유")),
                (
                    "user",
                    models.ForeignKey(
                        help_text="수정 혹은 삭제의 주체자",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ctrlf_auth.ctrlfuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RemoveField(
            model_name="note",
            name="request_contents",
        ),
        migrations.RemoveField(
            model_name="note",
            name="user",
        ),
        migrations.AddField(
            model_name="note",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="note",
            name="owners",
            field=models.ManyToManyField(to="ctrlf_auth.CtrlfUser"),
        ),
        migrations.AddField(
            model_name="note",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100)),
                ("is_approved", models.BooleanField(default=False)),
                ("note", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ctrlfbe.note")),
                ("owners", models.ManyToManyField(to="ctrlf_auth.CtrlfUser")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100)),
                ("content", models.TextField(default="")),
                ("owners", models.ManyToManyField(to="ctrlf_auth.CtrlfUser")),
                ("topic", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="ctrlfbe.topic")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=100)),
                ("content", models.TextField(default="")),
                (
                    "status",
                    models.CharField(
                        choices=[("REQUESTED", "요청"), ("REJECTED", "거절"), ("APPROVED", "승인"), ("CLOSED", "닫힘")],
                        help_text="Issue 상태들",
                        max_length=30,
                    ),
                ),
                (
                    "content_history",
                    models.ForeignKey(
                        help_text="Issue와 관련된 content history",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ctrlfbe.contenthistory",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="이슈를 생성한 사람", on_delete=django.db.models.deletion.CASCADE, to="ctrlf_auth.ctrlfuser"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
